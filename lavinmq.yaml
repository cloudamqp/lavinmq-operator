apiVersion: v1
kind: Service
metadata:
  name: lavinmq
spec:
  type: NodePort
  ports:
    - name: http
      port: 15672
      targetPort: 15672
      nodePort: 31001
  selector:
    app: lavinmq
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lavinmq-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lavinmq
spec:
  serviceName: lavinmq
  replicas: 1
  selector:
    matchLabels:
      app: lavinmq
  template:
    metadata:
      labels:
        app: lavinmq
    spec:
      containers:
        - name: lavinmq
          image: cloudamqp/lavinmq:latest
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: http
          volumeMounts:
            - name: lavinmq-data
              mountPath: /var/lib/lavinmq         
          command: ["/bin/sh", "-c", "lavinmq -b 0.0.0.0 --clustering --clustering-bind :: --clustering-advertised-uri=tcp://lavinmq-0:5679 --clustering-etcd-endpoints=localhost:2379 --log-level=debug" ]
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "admin"
            - name: RABBITMQ_DEFAULT_PASS
              value: "admin"
      initContainers:
        - name: lavinmq-etcd
          image: bitnami/etcd:latest
          restartPolicy: Always
          env:
            - name: ALLOW_NONE_AUTHENTICATION
              value: "yes"
            - name: ETCD_ROOT_PASSWORD
              value: "admin"
          ports:
            - containerPort: 2379
              name: etcd
            - containerPort: 2380
              name: etcd-peer
          volumeMounts:
            - name: etcd-data
              mountPath: /var/lib/etcd

  volumeClaimTemplates:
    - metadata:
        name: lavinmq-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: etcd-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
